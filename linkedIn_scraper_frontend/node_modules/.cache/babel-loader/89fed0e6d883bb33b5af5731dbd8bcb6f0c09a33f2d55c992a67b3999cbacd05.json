{"ast":null,"code":"var _jsxFileName = \"/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null); //user data\n  const [response, setResponse] = useState(null); //request response from scraper\n  const [loading, setLoading] = useState(false); //loading screen toggle var\n  const [error, setError] = useState(null);\n  async function sendData() {\n    setLoading(true); // \"Loading...\" displayed after link submitted and before response arrives from backend\n    const response = await fetch('http://127.0.0.1:5000/link', {\n      // calling POST req via fetch to flask - local port 5000\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: data\n      }) // posting link submitted to backend\n    });\n\n    const responseBody = await response.json(); // when response comes in from scraper...\n    setLoading(false); // loading finishes ...\n\n    if (responseBody === null) {\n      setError(\"Bad Link Try Again\");\n    } else {\n      setResponse(responseBody); //response set to post req response ...\n    }\n\n    console.log(responseBody); //logged\n  }\n\n  function getData(val) {\n    // just saving user linkedin input\n    setData(val.target.value);\n    console.warn(val.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Input LinkedIn URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this) : response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left',\n        paddingLeft: '40px'\n      },\n      children: [\"Name\", \"Title\", \"Location\", \"About\", \"Experiences\", \"Education\", \"Recommendation\"].map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), Array.isArray(response[key]) && Array.isArray(response[key][0]) ? response[key].map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '45px'\n          },\n          children: group.map((item, i) => i === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 53\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 79\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: JSON.stringify(response[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qjFuMxzkMS6BNcJefleXW3e3BU8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","jsxDEV","_jsxDEV","App","_s","data","setData","response","setResponse","loading","setLoading","error","setError","sendData","fetch","method","headers","body","JSON","stringify","responseBody","json","console","log","getData","val","target","value","warn","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","paddingLeft","map","key","Array","isArray","group","index","marginBottom","item","i","_c","$RefreshReg$"],"sources":["/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg'\nimport './App.css'\nimport React, {useState} from 'react'\n\n\nfunction App() {\n\n  const [data, setData] = useState(null); //user data\n  const [response, setResponse] = useState(null); //request response from scraper\n  const [loading, setLoading] = useState(false); //loading screen toggle var\n  const [error, setError] = useState(null)\n\n  async function sendData() {\n    setLoading(true); // \"Loading...\" displayed after link submitted and before response arrives from backend\n    const response = await fetch('http://127.0.0.1:5000/link', { // calling POST req via fetch to flask - local port 5000\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({data: data}) // posting link submitted to backend\n    });\n\n    const responseBody = await response.json(); // when response comes in from scraper...\n    setLoading(false); // loading finishes ...\n\n    if (responseBody === null) {\n      setError(\"Bad Link Try Again\")\n    } else {\n      setResponse(responseBody); //response set to post req response ...\n    }\n    console.log(responseBody); //logged\n  }\n\n  function getData(val) { // just saving user linkedin input\n    setData(val.target.value)\n    console.warn(val.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{textAlign: 'center'}}>\n        <h1>Input LinkedIn URL</h1>\n        <input type=\"text\" onChange={getData} />\n        <button onClick={sendData}>Submit</button>\n      </div>\n      {error ? <h1>{error}</h1> : \n        loading ? <h1>Loading...</h1> : \n        response && \n        <div style={{textAlign: 'left', paddingLeft: '40px'}}>\n          {[\"Name\", \"Title\", \"Location\", \"About\", \"Experiences\", \"Education\", \"Recommendation\"].map(key => (\n            <div key={key}>\n              <h2>{key}</h2>\n              {Array.isArray(response[key]) && Array.isArray(response[key][0]) ? response[key].map((group, index) => (\n                <div key={index} style={{marginBottom: '45px'}}>\n                  {group.map((item, i) => i === 0 ? <li key={i}>{item}</li> : <p key={i}>{item}</p>)}\n                </div>\n              )) : <p>{JSON.stringify(response[key])}</p>}\n            </div>\n          ))}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}