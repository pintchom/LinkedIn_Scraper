[{"/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/index.js":"1","/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/App.js":"2","/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/reportWebVitals.js":"3"},{"size":535,"mtime":1689808658353,"results":"4","hashOfConfig":"5"},{"size":2179,"mtime":1690150326936,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1689808658354,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sdfxzs",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/index.js",[],[],"/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/App.js",["18"],[],"import logo from './logo.svg'\nimport './App.css'\nimport React, {useState} from 'react'\n\n\nfunction App() {\n\n  const [data, setData] = useState(null); //user data\n  const [response, setResponse] = useState(null); //request response from scraper\n  const [loading, setLoading] = useState(false); //loading screen toggle var\n\n  async function sendData() {\n    setLoading(true); // \"Loading...\" displayed after link submitted and before response arrives from backend\n    const response = await fetch('http://127.0.0.1:5000/link', { // calling POST req via fetch to flask - local port 5000\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({data: data}) // posting link submitted to backend\n    });\n\n    const responseBody = await response.json(); // when response comes in from scraper...\n    setLoading(false); // loading finishes ...\n    setResponse(responseBody); //response set to post req response ...\n    console.log(responseBody); //logged\n  }\n\n  function getData(val) { // just saving user linkedin input\n    setData(val.target.value)\n    console.warn(val.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{textAlign: 'center'}}>\n        <h1>Input LinkedIn URL</h1>\n        <input type=\"text\" onChange={getData} />\n        <button onClick={sendData}>Submit</button>\n      </div>\n      {loading ? <h1>Loading...</h1> : \n        response?.error ? <h1>{response.error}</h1> :\n        response && \n        <div style={{textAlign: 'left', paddingLeft: '40px'}}>\n          {[\"Name\", \"Title\", \"Location\", \"About\", \"Experiences\", \"Education\", \"Recommendation\"].map(key => (\n            <div key={key}>\n              <h2>{key}</h2>\n              {Array.isArray(response[key]) && Array.isArray(response[key][0]) ? response[key].map((group, index) => (\n                <div key={index} style={{marginBottom: '45px'}}>\n                  {group.map((item, i) => i === 0 ? <li key={i}>{item}</li> : <p key={i}>{item}</p>)}\n                </div>\n              )) : <p>{JSON.stringify(response[key])}</p>}\n            </div>\n          ))}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;","/Users/maxpintchouk/Code/linkedIn_scraper_tract/linkedIn_scraper_frontend/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]